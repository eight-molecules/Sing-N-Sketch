//
//  AKTimePitchWindow.swift
//  AudioKit
//
//  Autogenerated by scripts by Aurelius Prochazka. Do not edit directly.
//  Copyright (c) 2015 Aurelius Prochazka. All rights reserved.
//

import Foundation
import Cocoa

/// A Window to control AKTimePitch in Playgrounds
public class AKTimePitchWindow: NSWindow {
    
    private let windowWidth = 400
    private let padding = 30
    private let sliderHeight = 20
    private let numberOfComponents = 3
    
    /// Slider to control rate
    public let rateSlider: NSSlider
    /// Slider to control pitch
    public let pitchSlider: NSSlider
    /// Slider to control overlap
    public let overlapSlider: NSSlider
    /// Slider to control enablePeakLocking
    public let enablePeakLockingSlider: NSSlider
    
    private let rateTextField: NSTextField
    private let pitchTextField: NSTextField
    private let overlapTextField: NSTextField
    private let enablePeakLockingTextField: NSTextField
    
    private var timePitch: AKTimePitch
    
    /// Initiate the AKTimePitch window
    public init(_ control: AKTimePitch) {
        timePitch = control
        let sliderWidth = windowWidth - 2 * padding
        
        rateSlider = newSlider(sliderWidth)
        pitchSlider = newSlider(sliderWidth)
        overlapSlider = newSlider(sliderWidth)
        enablePeakLockingSlider = newSlider(sliderWidth)
        
        rateTextField = newTextField(sliderWidth)
        pitchTextField = newTextField(sliderWidth)
        overlapTextField = newTextField(sliderWidth)
        enablePeakLockingTextField = newTextField(sliderWidth)
        
        let titleHeightApproximation = 50
        let windowHeight = padding * 2 + titleHeightApproximation + numberOfComponents * 3 * sliderHeight
        
        super.init(contentRect: NSRect(x: padding, y: padding, width: windowWidth, height: windowHeight),
            styleMask: NSTitledWindowMask,
            backing: .Buffered,
            `defer`: false)
        self.hasShadow = true
        self.styleMask = NSBorderlessWindowMask | NSResizableWindowMask
        self.movableByWindowBackground = true
        self.level = 7
        self.title = "AKTimePitch"
        
        let viewRect = NSRect(x: 0, y: 0, width: windowWidth, height: windowHeight)
        let view = NSView(frame: viewRect)
        
        let topTitle = NSTextField()
        topTitle.stringValue = "AKTimePitch"
        topTitle.editable = false
        topTitle.drawsBackground = false
        topTitle.bezeled = false
        topTitle.alignment = NSCenterTextAlignment
        topTitle.font = NSFont(name: "Lucida Grande", size: 24)
        topTitle.sizeToFit()
        topTitle.frame.origin.x = CGFloat(windowWidth / 2) - topTitle.frame.width / 2
        topTitle.frame.origin.y = CGFloat(windowHeight - padding) - topTitle.frame.height
        view.addSubview(topTitle)
        
        makeTextField(rateTextField, view: view, below: topTitle, distance: 2,
            stringValue: "Rate: \(timePitch.rate) rate")
        makeSlider(rateSlider, view: view, below: topTitle, distance: 3, target: self,
            action: "updateRate",
            currentValue: timePitch.rate,
            minimumValue: 0.03125,
            maximumValue: 32.0)
        
        makeTextField(pitchTextField, view: view, below: topTitle, distance: 5,
            stringValue: "Pitch: \(timePitch.pitch) Cents")
        makeSlider(pitchSlider, view: view, below: topTitle, distance: 6, target: self,
            action: "updatePitch",
            currentValue: timePitch.pitch,
            minimumValue: -2400,
            maximumValue: 2400)
        
        makeTextField(overlapTextField, view: view, below: topTitle, distance: 8,
            stringValue: "Overlap: \(timePitch.overlap) generic")
        makeSlider(overlapSlider, view: view, below: topTitle, distance: 9, target: self,
            action: "updateOverlap",
            currentValue: timePitch.overlap,
            minimumValue: 3.0,
            maximumValue: 32.0)
        
        self.contentView!.addSubview(view)
        self.makeKeyAndOrderFront(nil)
    }
    
    internal func updateRate() {
        timePitch.rate = rateSlider.doubleValue
        rateTextField.stringValue = "Rate \(String(format: "%0.4f", timePitch.rate)) rate"
    }
    internal func updatePitch() {
        timePitch.pitch = pitchSlider.doubleValue
        pitchTextField.stringValue = "Pitch \(String(format: "%0.4f", timePitch.pitch)) Cents"
    }
    internal func updateOverlap() {
        timePitch.overlap = overlapSlider.doubleValue
        overlapTextField.stringValue = "Overlap \(String(format: "%0.4f", timePitch.overlap)) generic"
    }
    
    /// Required initializer
    required public init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}

